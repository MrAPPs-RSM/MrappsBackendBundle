<?php

namespace Mrapps\BackendBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Mrapps\BackendBundle\Entity\SidebarEntry;

/**
 * SidebarEntryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SidebarEntryRepository extends EntityRepository
{
    public function clearSidebar() {

        $em = $this->getEntityManager();
        $q = $em->createQuery('delete from MrappsBackendBundle:SidebarEntry s where 1=1');
        $numDeleted = $q->execute();

        return $numDeleted;
    }

    public function addSidebarEntry($sidebar = null, $autoFlush = true) {

        $entry = null;

        if(is_array($sidebar)) {

            $code = (isset($sidebar['code'])) ? strtoupper(trim($sidebar['code'])) : '';
            $label = (isset($sidebar['label'])) ? trim($sidebar['label']) : '';
            $minRole = (isset($sidebar['min_role'])) ? strtoupper(trim($sidebar['min_role'])) : null;
            $visible = (isset($sidebar['visible'])) ? (bool)$sidebar['visible'] : false;
            $parentCode = (isset($sidebar['parent'])) ? strtoupper(trim($sidebar['parent'])) : '';
            $weight = (isset($sidebar['weight'])) ? intval($sidebar['weight']) : 0;
            $route = (isset($sidebar['route'])) ? trim($sidebar['route']) : '';

            if(strlen($code) > 0) {

                $em = $this->getEntityManager();

                $entry = $this->findOneBy(array('code' => $code));
                if($entry == null) {
                    $entry = new SidebarEntry();
                    $entry->setCode($code);
                }

                $entry->setLabel($label);
                $entry->setMinRole($minRole);
                $entry->setVisible($visible);
                $entry->setWeight($weight);
                $entry->setRoute($route);

                $parent = $this->findOneBy(array('code' => $parentCode));
                $entry->setParent($parent);

                $em->persist($entry);
                if($autoFlush) {
                    $em->flush($entry);
                }
            }
        }

        return $entry;
    }
}
