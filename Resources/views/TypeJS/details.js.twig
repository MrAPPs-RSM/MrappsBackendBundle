{% trans_default_domain 'MrappsBackendBundle' %}
{% if field.value is not iterable %}{% set field = field|merge({'value':[]}) %}{% endif %}
$scope.form.{{field.name}} = {{field.value|json_encode|raw}};

$scope.{{field.name}}CreateBackup = function(d) {
    var backup = {};
    {% for s in field.structure %}
    backup.{{ s.name }} = d.{{ s.name }};
    {% endfor %}
    d._{{field.name}}_original = backup;
    
    return d;
};

$.each($scope.form.{{field.name}}, function(k,v) {
    $scope.form.{{field.name}}[k] = $scope.{{field.name}}CreateBackup(v);
});

{% if field.disable_add is not defined or field.disable_add==false %}
$scope.{{field.name}}AddDetail = function() {
    {% if field.max is defined %}
    if($scope.form.{{field.name}}.length >= {{ field.max }}) {
        toastr.error("Impossibile aggiungere pi√π di {{ field.max }} elementi", '{{ 'form.errore'|trans }}');
        return;
    }
    {% endif %}
    var newElement = { {% for s in field.structure %}'{{ s.name }}':''{% if loop.last == false %},{% endif %}{% endfor %} };
    newElement = $scope.{{field.name}}CreateBackup(newElement);
    $scope.form.{{field.name}}.push(newElement);
};
{% endif %}

{% if field.disable_edit is not defined or field.disable_edit==false %}
$scope.{{field.name}}UndoEditDetail = function(field,i) {

    swal({
        title: "Annullare le modifiche?",
        text: "",
        type: "warning",
        showCancelButton: true,
        confirmButtonColor: "#DD6B55",
        confirmButtonText: "{{ 'checkbox.si'|trans|e('js') }}",
        cancelButtonText: "{{ 'checkbox.no'|trans|e('js') }}",
        closeOnConfirm: true,
        closeOnCancel: true
    }, function (isConfirm) {
        if (isConfirm) {
            $scope.form.{{field.name}}[i][field] = $scope.form.{{field.name}}[i]._{{field.name}}_original[field];
            $scope.$apply();
        }
    });
};
{% endif %}

{% if field.disable_delete is not defined or field.disable_delete==false %}
$scope.{{field.name}}DeleteDetail = function(i) {
    swal({
        title: "Eliminare questo elemento?",
        text: "",
        type: "warning",
        showCancelButton: true,
        confirmButtonColor: "#DD6B55",
        confirmButtonText: "{{ 'checkbox.si'|trans|e('js') }}",
        cancelButtonText: "{{ 'checkbox.no'|trans|e('js') }}",
        closeOnConfirm: true,
        closeOnCancel: true
    }, function (isConfirm) {
        if (isConfirm) {
            $scope.form.{{field.name}}.splice(i, 1);
            $scope.$apply();
        }
    });
};
{% endif %}

{% for s in field.structure %}
    {% if s.visible is not defined or s.visible %}
        {% if s.type=='select' %}
            $scope.{{ field.name }}_{{ s.name }}_Items = [];
            {% for opt in s.options %}
                $scope.{{ field.name }}_{{ s.name }}_Items.push({{ opt|json_encode()|raw }});
            {% endfor %}
        {% endif %}
    {% endif %}
{% endfor %}